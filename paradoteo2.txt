


//incert city in database
public void insert(String museums, String cafesRestaurantsBars, String weather, float lat, float lon , ArrayList<Integer> list) throws Exception {
    System.out.println(list);
    DatabaseConnection db = new DatabaseConnection();
    try (Connection connect = db.getConnection()) {
        String sql = "insert into user_payment (museums ,cafesRestaurantsBars, weather, lat, lon) VALUES (?,?,?,?,?)";
        try (PreparedStatement ps = connect.prepareStatement(sql)) {
            ps.setString(1, Museums);
            ps.setString(2, CafesRestaurantsBars);
            ps.setString(3, Weather);
            ps.setString(4, Lat);
            ps.setString(5, Lon);
            for (Integer seat : list) {
                ps.setInt(5, seat);
                ps.addBatch();
            }
            ps.executeBatch();
         }
    }
}



        // sort by age

      Collections.sort(Traveller, Comparator.comparing(Order::getAge);



    @Override
        public boolean equals(object o) {



            if (this == o) return true;
            if (!(o instanceof City)) return false;



                City city  = (city) o;

            return !(cityName != null ? !cityName.equals(City.cityName) : cityName.id != null);

        }
 




import java.io.*;
import java.util.*;
import java.util.Scanner; 
import java.io.File;  
import java.io.IOException;  
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;



 public static void Main(String[] args) {

 
       Scanner scn = new Scanner(System.in); 

       	Traveller traveller = new Traveller();
            System.out.println("Please enter museum that you like: ");
            Traveller.setLikemuseum (scanner.nextLine());
            System.out.println("Please enter cafesRestaurantsBars that you like: ");
            Traveller.setLikemuseum (scanner.nextLine());
            System.out.println("Please enter weather that you like: ");
            Traveller.setLikemuseum (scanner.nextLine());
            System.out.println("Please enter latitude that you like: ");
            Traveller.setLikemuseum (scanner.nextLine());
            System.out.println("Please enter longtitude that you like: ");
            Traveller.setLikemuseum (scanner.nextLine());



        System.out.println("Are you a business or a tourist , traveller ?");
         
          
        

ArrayList<Article> cityy = new ArrayList<>();
        
        String apiUrl = "https://api.wiki.com/svc/search/v2/wikisearch.json";
        String apiKey = "f812fa3556e745639e378dfc9f7b4fda";
        

        ApiCaller http = new ApiCaller();
        
        try {
            System.out.println("Testing 1 - Send Http GET request");
            InputStream apiResponse = http.sendGet(apiUrl, apiKey);
            JsonParser jp = new JsonParser();
            JSONObject jsonObject = jp.readAsJson(apiResponse);
            
            JSONObject resp = (JSONObject) jsonObject.get("response");
            JSONArray docs = (JSONArray) resp.get("docs");
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

ArrayList<Article> weatherr = new ArrayList<>();
        
        String apiUrl = "https://api.openweather.com/svc/search/v2/weatherr.json";
        String apiKey = "f812fa3556e745639e378dfc9f7b4fda";
        

        ApiCaller http = new ApiCaller();
        
        try {
            System.out.println("Testing 1 - Send Http GET request");
            InputStream apiResponse = http.sendGet(apiUrl, apiKey);
            JsonParser jp = new JsonParser();
            JSONObject jsonObject = jp.readAsJson(apiResponse);
            
            JSONObject resp = (JSONObject) jsonObject.get("response");
            JSONArray docs = (JSONArray) resp.get("docs");
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }


}




 List<String> city = createList();


 
city anElement = new City(); 
  anElement.museums= 'none';
  anElement.cafesRestaurantsBars= 'none';
  anElement.weather = 29 ;
  anElement.lat = 29.929 ;
  anElement.lon = 37.939 ;
boolean didCollectionChange = collection.add(anElement);


List<String> traveller = createList();


city aElement = new City();

  aElement.name = 'none';
   aElement.age = 37 ; 
   aElement.currentlat ;
   aElement.currentlon ;
  aElement.likemuseum = 'none';
  aElement.likecafesRestaurantsBars= 'none'; 
  aElement.likeweather= 'none'; 
  aElement.likelat = 37.9876 ;
  aElement.likelon = 37.9876 ;
  aElement.childname = 37.9876 ;


city aElement = new City(); 
boolean didCollectionChange = collection.add(aElement);







    Traveller tr1 = new Traveller("John", 30, "Male");
    

    try {
      FileOutputStream f = new FileOutputStream(new File("file.txt"));
      ObjectOutputStream o = new ObjectOutputStream(f);

      // Write objects to file
      o.writeObject(tr1);
      

      o.close();
      f.close();

      FileInputStream fi = new FileInputStream(new File("file.txt"));
      ObjectInputStream oi = new ObjectInputStream(fi);

      // Read objects
      Traveller tr1 = (Traveller) oi.readObject();
      

      System.out.println(pr1.toString());
      

      oi.close();
      fi.close();

    } catch (FileNotFoundException e) {
      System.out.println("File not found");
    } catch (IOException e) {
      System.out.println("Error initializing stream");
    } catch (ClassNotFoundException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }

  
}
